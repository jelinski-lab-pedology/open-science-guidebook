[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Open Science: Tools Applications, & Workflow",
    "section": "",
    "text": "This book outlines an open, standardize workflow for use on all projects in the Jelinski lab. With the diverse library of tools, apps, and digital repositories available to you as it as a researcher, it is extremely difficult to understand which ones to use and how to put together a workflow. My goal is to standardize workflow for all projects in our lab - or at the very least to provide a scaffold, foundational approach that everyone can borrow and modify from as best fits their needs. This is not so much meant to force you into a particular way of doing your thinking things, but rather to free you up to do what’s really important, the research. Making decisions about how to name files, what format and style to use for code, how to structure project files and folders, and what tools and apps to use is exhausting, and these decisions take you away from the science. The goal of this standardized workflow is to produce transparent, open science, that is easily reproducible, transparent, usable by others, and most importantly well organized and documented so that you and others can easily understand what you’ve done and how you’ve done it. There are a few principal concepts behind this workflow and how you can structure your work to be most productive:\n\n\nA major part of research is hitting dead ends, going down rabbit holes, and generally feeling like you might be wasting your time because it’s taking you so long two get to the correct analysis or perspective. However, none of this is waste of time. Every dead end is a door that has closed to allow you to find your path forward. It’s your job as a scientist and researcher to define and document those dead ass and not give up. Recognize that those that ends are part of the process, and make those dead ends work for you. By using a standardized workflow even those dead ends become reproducible transparent learning experiences that are documented fully for you and others to grow from.\n\n\n\nOne of my mentors as probationary faculty, Dr. Ed Nater, told me that a career in science “is a marathon, not a sprint”. Despite the modern urgency to publish as many papers as possible in a short amount of time, research still takes time. And often we don’t know exactly how long is gonna take. It’s better to do good science then to do fast science. Of course ideally we could do good, fast science. This workflow will help you do that - it will help you do good science, create transparent citeable and reproducible content, even from your unfinished drafts, dead ends, and false starts. Because research is not is a marathon and not a sprint, it is absolutely important that you take care of your whole being. This means taking care of your body and your mind. Let me tell you a story.\nAs an academic, most of us who are in this for the career work long hours. I’ve been working long hours overnights, 50 to 60 hours a week for as long as I can remember - this is normal in academia. I used to view this as “the grind”. I used to think that the answer to be more productive was just putting in more hours in the grind. If I could just stay up one more night, push through for three more hours, sit at my desk for 10-12 hours in a day, and work work work, I could produce more. What I realized as I’ve reached the middle of my career is that there are more ways to produce more which also allow you to be healthier than just grinding the large number of hours. Certainly hours are important, for example you probably are not gonna publish a research paper write a thesis write a dissertation or be successful in a faculty job without putting in more than 40 hours a week and some overnights. But, those should not be the norm. There are ways to design your life so that those are few and far between. Striving for a physical and mental balance is extremely important and my years of grinding have taken a toll. Although they have given me a lot, and I’ve been able to achieve tenure, looking back I now see how I could have changed my processes to work fewer hours, be more physically healthy and more mentally available for my friends and family, and produce more.\nMuch of this starts with prioritizing your physical health. You simply can’t reach your top productivity if you are not physically healthy because the mind-body connection is strong. Physical health is a cornerstone for long-term productivity in any career. And science is no different. After years of mucking through different processes, workflows, and trial and error, I’m finally starting to reach an understanding regarding how to construct these processes to reduce decision fatigue and be more productive, allow me more time to do more things outside of work and to take care of myself my family. This all involves standardization. Jocko Willink is famous for his mantra “Discipline Equals Freedom”. This mantra also holds true in creative work such as academia. Although it seems counterintuitive and potentially restricting at first, standardized processes actually allow you to do better, more creative, more reproducible, and more inspiring work. Note to insert references to dance, art and writers that have used standardized processes. This is because all of the small decisions that you make about, for example (just to name a few):\n\nWhat to name files how to create a structure in a folder,\nwhat app to use to do data analysis,\nhow to write and structure code,\n\nreduce your ability to focus on what really matters, generating data, analyzing data, the science and the writing. By standardizing workflows and processes, we relegate the trivial stuff to a trusted system This system is one that holds important information, and allows you to access it freely and readily, but makes all of the trivial decisions for you. This allows you to focus on just the information. It frees you to think more and more deeply about what really matters, to focus your time and effort outside of work on your physical and mental health.\n\n\n\n10 years ago, very few people were doing open science. Now with openscapes and a handful of other strong initiatives more and more people are doing open science in environmental fields. More journals require that you submit raw data, code or somehow package everything to make your analysis and results reproducible. This workflow will allow you to do that automatically as you build your project. When you get to the point of submitting a manuscript you will already have a citable online repository that you can point to when you submit your manuscript. This workflow also fosters a mindset of development and growth, where you “show your work” all the time. Showing your work all the time is a great way to:\n\nFoster collaboration,\nto be “constantly producing”, and\n\nto feel more accomplished feel that you can be “done” at the end of a workday day.\n\nIn the beginning you may find implementing this workflow to be slower, and at first there will be a learning curve. Also, fitting your project into a standardize workflow will cause you to work a bit slower at sometimes then you could if you didn’t have to fit in the standardize workflow. However after 18 years of managing projects and doing science, I can tell you the time effort and mental strain saved from having an organized, standardized, and open process and workflow will save you an incredible amount of time, but it can also provide you a strong foundation that you can carry into the future and never duplicate or backtrack on work you have already done. I can’t tell you how many times I’ve gone back to read a paper that I’ve read five times just to fit it into another reference, or to format a bibliography, or to make sense of code that I wrote just six months ago, or to update the class syllabus documents or find different versions of files that are scattered across my computer, in cloud storage, and named different things. As you go on your research career you will accumulate more and more of this baggage. If you start with a standardized workflow early in your career, this baggage will be manageable, well structured, available to you and others, and will actually promote a positive feedback loop whereby the work that you do now makes future work even easier.\n\n\n\nI am a traveler on this road as well. I do not have all of the answers, but I have spent time developing a system and set of tools that have begun to pay huge dividends in my work and personal life. I hope to share these lessons learned with you.\nI hope you will join me on this journey."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Project Setup and “Pre”-Data\nRaw Data Collection\nRaw Data Curation & Data Production\nData Analysis and Interpretation\nWriting and External Products\nLong-Term Data Archiving and Storage\nX Notetaking Strategies\n\nNote that although these major components are listed in chronological order, they will likely not necessarily occur in distinct stages in your project. For example data analysis may begin with preliminary data and continue as you are writing drafts of manuscripts AND writing occurs across all of these components - writing actually begins with project setup as you will see. If you have a project idea, you can start writing! Thhis allows you to never start with a blank page\nTo execute this standardized workflow as described, it will be necessary for you to be familiar with and utilize the following tools:\n\nArcGIS Online: Survey123 (Proprietary - Free account available through UMN)\nObsidian (Open source)\nZotero (Open source)\nQGIS (Open source)\nR/RStudio (Open source)\nGitHub/GitHub Desktop (Proprietary - Free account available to anyone)\nGoogle Drive (Proprietary - Free account available to anyone, unlimited storage available through UMN)\nInkScape (Open source)\nHack MD (Proprietary - Free account available to anyone)\nnote to potentially include social professional sites like ResearchGate and Google Scholar + ORCID + X?\n\nThese are not a randomly selected group of tools - they are designed at every turn to allow deep integration and (as much as possible) free and open source usage. Although not all of these tools are open source (ArcGIS Online, GitHub, Google Drive, Hack MD) with the exception of ArcGIS Online, all of these tools have a free base level, which will be sufficient to execute this workflow. Additionally, because of UMN’s enterprise license with ArcGIS Online, all of those tools are available free to you.\nThese tools will require you to be fluent in the following languages:\n\nR (core language, critical skill)\nMarkdown (core language, critical skill)\nAlthough not required to execute this workflow, familiarity with Python and SQL might help you do more customization"
  },
  {
    "objectID": "project-setup.html",
    "href": "project-setup.html",
    "title": "Project Setup, Documentation, and “Pre-Data”",
    "section": "",
    "text": "This is the first part of any project, and can begin as soon as you have an idea - in fact, it is completely fine to set up a project that is just an idea, with no content yet. Just going through the setup process makes a project more “real” in your mind, and also gives you a structure to collect thoughts, ideas, and related information for future work, even before you are starting to work on a project in earnest. I’ve got many directories on my computer that are empty placeholders for wishlist projects years in the future."
  },
  {
    "objectID": "project-setup.html#project-setup",
    "href": "project-setup.html#project-setup",
    "title": "Project Setup, Documentation, and “Pre-Data”",
    "section": "Project Setup",
    "text": "Project Setup\nThis includes deciding what constitutes a “project” (this seems like it should be an easy thing, but it’s actually very difficult), how to generate a file and folder structure for your project before you even begin that lives and syncs across platforms. This setup is designed to work for all of the project types we deal with regardless of the initial data origin (i.e. field projects, laboratory projects, review or data compilation).\n\n\n\n\n\n\nRequired Tools - Project Setup\n\n\n\n\nA local folder structure on your personal computer\nGitHub/GitHub Desktop\nGoogle Drive\nZotero\nObsidian\nInkscape"
  },
  {
    "objectID": "para-system.html",
    "href": "para-system.html",
    "title": "1  Overview of the PARA system",
    "section": "",
    "text": "This workflow is designed around discrete units of work called projects and utilizes Tiago Forte’s PARA system of file structure and organization. The PARA system (Projects, Areas, Resources, and Archive) is an excellent place to start for organizing your files - if you don’t have strong feelings about how your work files are organized on your computer, I highly suggest starting with this. If you do have strong feelings, you can always adapt the system to something that works for you. Utilizing this system doesn’t necessarily commit you to going back and re-organizing all of your work files on your computer. Just start now, and build as you go and work on new projects. As you have time in the future, you can always go back and fit your previous work into this structure. However - see my notes on things to watch for when you go back to “refactor” your files and folder structure.\nThe most important thing is to start now; start today.\nThe second most important thing is to use the same structure across apps, platforms, and languages, which will allow deep integration and ensure you always know where everything is. You will spend less time trying to find for example, a small test R script you wrote last year or that interesting thing you read 18 months (or 2 months!) ago that was related to this project."
  },
  {
    "objectID": "para-system.html#the-para-system-in-practice",
    "href": "para-system.html#the-para-system-in-practice",
    "title": "1  Overview of the PARA system",
    "section": "1.1 The PARA system in practice",
    "text": "1.1 The PARA system in practice\nTiago Forte’s PARA acronym stands for: Projects, Areas, Resources, and Archive. This system is not strictly hierarchical, but each category from front to back in PARA is given precedence over the last. That is because the underlying philosophy is that projects should produce end outputs or deliverables. Things that are not yet projects, or are larger than a single project are more nebulous, but not any less valuable.\nUsing the PARA system requires you to set up high level folders (I would suggest in the Documents directory of your computer) for each of the PARA categories: Projects, Areas, Resources, and Archive. Then, all of your professional work, and eventually some of your personal work and interests will nest under these.\nDefining projects is probably the most important part of this workflow and drives everything else, so I will start there."
  },
  {
    "objectID": "para-system.html#projects-vs-areas-vs-resources-vs-archive",
    "href": "para-system.html#projects-vs-areas-vs-resources-vs-archive",
    "title": "1  Overview of the PARA system",
    "section": "1.2 Projects vs Areas vs Resources vs Archive",
    "text": "1.2 Projects vs Areas vs Resources vs Archive\nWork through from Projects to Archive - dichotomous key - if it doesnt fit in the others, its an archive"
  },
  {
    "objectID": "para-system.html#what-is-a-project-how-should-i-name-my-projects",
    "href": "para-system.html#what-is-a-project-how-should-i-name-my-projects",
    "title": "1  Overview of the PARA system",
    "section": "1.3 What is a project? How should I name my projects?",
    "text": "1.3 What is a project? How should I name my projects?\n\n1.3.1 Defining Projects - How to Determine if Something is a Project\nThis seems like a trivial question but defining project boundaries in research can be difficult. Where does one project end and another begin? Does a project include multiple sub projects?\nA project is something you are involved in that has a discrete, definable end state or product. Note that our definition of projects here means they are flat. There should not be multiple projects nested under other projects. Each project is a discrete entity - this alings with GitHub repository organization (as we will see in future chapters), which allows deep integration. In our line of work, examples would be:\n\nA thesis chapter; see below for why a thesis or dissertation itself is actually larger than a Project - it is an Area\nA manuscript\nA grant might be a project, but is usually better defined as an Area (because these days all grants are collaborative) with multiple projects underneath. Also, because most grants actually have multiple end products such as reports and manuscripts.\nReports to stakeholders on unpublished data.\nX Are conference presentations nested in here? No - they are not projects but nested under projects.\nX Photos are nested and linked to projects in the GitHub readme file\n\n\n\n1.3.2 Naming Projects\nThis is a general style guide for naming projects (in the context of files or folder structures). Projects may have very long actual names (or you may not even know what, exactly the name of your project or project idea will eventually be). This doesn’t matter for the purposes of project setup. For now, we just need a two to three word abbreviated title for the project that we will use in our folder structure. For example, I am working on a manuscript called “Techniques for Field Identification of the Permafrost Table” - but the three words in the project name in my folder structure are: permafrost, table, ID. Here is a style guide for naming your projects:\n\nProject names should start with your initials\nProjects should be designated as M (for manuscript, including thesis chapters, which should each be a publishable unit), P (for proposal), or R (for report) depending on the type of the end output.\nProjects should be given a two digit number (with a leading zero for any project numbers under 10) - these are just given in sequence as you create projects - so your first project is 01 - the order doesn’t matter.\nProjects should have a unique two to three word abbreviated name that is different from other projects you are working on.\n\nYour final project name is a combination of these four components as follows. Lets say I wanted to create a project structure for the “Techniques for Field Identification of the Permafrost Table” manuscript I am working on, and lets say it is the 9th project in my directory.\nMy project name is then Initials-TypeNumber-Word1-Word2-Word3. So, the project name for my manuscript would be:\nNAJ-M09-permafrost-table-ID"
  },
  {
    "objectID": "para-system.html#what-is-an-area-how-should-i-name-my-areas",
    "href": "para-system.html#what-is-an-area-how-should-i-name-my-areas",
    "title": "1  Overview of the PARA system",
    "section": "1.4 What is an Area? How should I name my Areas?",
    "text": "1.4 What is an Area? How should I name my Areas?\n\n1.4.1 Defining Areas - How to Determine if Something is an Area\nAreas are larger and more nebulous to define than projects, and they are also recurring and don’t necessarily have an endpoint (although they might have milestones or deliverables nested within them). The following are examples of Areas:\n\nTeaching a course.\nGrants. Although grants do have a definable end state, they should still be areas because they are highly collaborative and typically have multiple projects under them.\nAnnual reviews or summaries\nX Other examples?\n\n\n\n1.4.2 Naming Areas\nArea names can be a bit more general than project names. They should still be numbered"
  },
  {
    "objectID": "para-system.html#example-folder-structure",
    "href": "para-system.html#example-folder-structure",
    "title": "1  Overview of the PARA system",
    "section": "1.5 Example folder structure",
    "text": "1.5 Example folder structure"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  }
]